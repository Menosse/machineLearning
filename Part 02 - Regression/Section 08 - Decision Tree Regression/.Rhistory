# Installing SVR package
install.packages('1071')
# Installing SVR package
install.packages('1071')1
# Installing SVR package
install.packages('1071')
# Installing SVR package
install.packages('1071', dep = TRUE)
# Installing SVR package
install.packages('1071', dep = TRUE, type = "source")
# Installing SVR package
install.packages('1071', dep = TRUE, type = "source")
# Fitting SVR to the dataset
regressor = svm(formula = Salary ~ .,
data = SVRdataSet,
type = "eps-regression")
install.packages('rpart')
install.packages('randomForest')
setwd("~/Documents/machineLearning/Part 02 - Regression/Section 08 - Decision Tree Regression")
dataset = read_csv('Position_Salaries.csv')
dataset = read.csv('Position_Salaries.csv')
# Fitting the Regression Model to the dataset
library(rpart)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset)
# Predicting a new result
y_pred = regressor.predict(6.5)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Regression results (for higher resolution and smoother curve)
X_grid = np.arange(min(X), max(X), 0.01)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')
plt.title('Truth or Bluff (Decision Tree Regression Model)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
ggplot()+
geom_point(x = dataset$Level, y = dataset$Salary,
colour = 'red')+
geom_line(x = dataset$Level, y = predict(regressor, newdata = dataset),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Autho - Fernando Takada
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Fitting the Regression Model to the dataset
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
ggplot()+
geom_point(x = dataset$Level, y = dataset$Salary,
colour = 'red')+
geom_line(x = dataset$Level, y = predict(regressor, newdata = dataset),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
xGrid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = xGrid, y = predict(regressor, newdata = dataset)),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
xGrid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = xGrid, y = predict(regressor, newdata = data.frame(Level))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
xGrid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = xGrid, y = predict(regressor, newdata = data.frame(Level = xGrid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Visualising the Regression results (for higher resolution and smoother curve)
library(ggplot2)
xGrid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')+
geom_line(aes(x = xGrid, y = predict(regressor, newdata = data.frame(Level = xGrid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Regression Model)')+
xlab('Position level')+
ylab('Salary')
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# SVR
# Importing dataset
SVRdataSet = read.csv("Position_Salaries.csv")
SVRdataSet = SVRdataSet[2:3]
# Installing SVR package
install.packages('1071', dep = TRUE, type = "source")
# Importing the library
library(e1071)
# Fitting SVR to the dataset
regressor = svm(formula = Salary ~ .,
data = SVRdataSet,
type = "eps-regression")
# Predicting a new result
yPredict = predict(regressor, data.frame(level = 6.5))
# Visualizing SRV results
library(ggplot2)
ggplot()+
geom_point(aes(x = SVRdataSet$Level, SVRdataSet$Salary),
colour = 'red') +
geom_line(aes(x = SVRdataSet$Level, y = predict(regressor, newdata = SVRdataSet)),
colour = 'blue') +
ggtitle('Truth or bluff (SVR)') +
xlab('Level') +
ylab('Salary')
